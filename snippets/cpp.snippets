# =============================
# cin
# =============================
snippet cin
	cin >> ${1};${2}
# =============================
# class
# =============================
snippet class
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();

	private:
		${3:/* data */}
	};
# =============================
# cout
# =============================
snippet cout
	cout << "${1}" << endl;${2}
# =============================
# maincpp
# =============================
snippet maincpp
	#include <iostream>

	using namespace std;

	int main(int argc, char *argv[]) {
		${1}
		return 0;
	}
# =============================
# map
# =============================
snippet map
	map<${1:key}, ${2:value}> map${3};
# =============================
# namespace
# =============================
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# =============================
# readfile
# =============================
snippet readfile
	vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# =============================
# vector
# =============================
snippet vector
	vector<${1:char}> v${2};
