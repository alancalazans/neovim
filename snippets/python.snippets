#------------------
#--- Instruções ---
#------------------
#---> __magic__ <---
snippet __
	__${1:init}__$0
snippet #!
	#!/usr/bin/python3
#---> Class <---
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			$0
#---> Comentários <---
snippet cmts
	"""
	${1:coment}
	"""
#---> Docstring <---
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: $0
	'''
#---> For <---
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
#---> Function <---
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""${3:docstring for $1}"""
		${4:pass}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		$0
#---> if __name__ == '__main__': <---
snippet ifmain
	if __name__ == '__main__':
		${0:main()}
#---> Import <---
snippet imp
	import ${1:module}
#---> Lambda <---
snippet lambda
	${1:var} = lambda ${2:vars} : ${0:action}
#---> Method <---
snippet method
	def ${1:mname}(self, ${2:arg}):
		${0:pass}
#---> Property <---
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${0:self._$1 = value}
#---> Try <---
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${0:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${0:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${0:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${0:pass}
#---> While <---
snippet wh
	while ${1:condition}:
		${2:# code...}
#---------------------------
#--- Gatilhos para Flask ---
#---------------------------
#---> @app <---
snippet @app
	@app.route('/$1')
	def $2():
	    $0
#---> flaskapp <---
snippet flaskapp
	from flask import Flask

	app = Flask(__name__)

	@app.route('/')
	def index():
	    $0
	
	if __name__ == '__main__':
	    app.run(debug=True)
#---> embended <---
snippet embended
	{% $1 %}$0
#---> interpolation <---
snippet inter
	{{ $1 }}$0
#--------------------------
#--- Gatilhos para Flet ---
#--------------------------
snippet fletapp
	import flet as ft

	def main(page: ft.Page):
	    $0

	ft.app(target=main)
#-------------------
#--- PySimpleGUI ---
#-------------------
snippet sg
	import PySimpleGUI as sg
snippet layout
	layout = [
		[sg.Text('${1}'), $0]
	]
snippet sgt
	sg.Text('${1:String}')
snippet sgi
	sg.Input(key='-${0:chave}-')
snippet sgb
	sg.Button('$0')
snippet window
	window = sg.Window('${0:Title}', layout)
snippet while-true
	while True:

		event, values = window.read()

		if event == sg.WIN_CLOSED or event == '${1:Quit}':
			break
		elif event == '$2':
			$0

	window.close()
snippet sg-base
	import PySimpleGUI as sg

	sg.theme('DefaultNoMoreNagging')

	layout = [
		[sg.Text(''), ]
	]

	window = sg.Window('', layout, font='_ 12', finalize=True)

	while True:

		event, values = window.read()

		if event in (sg.WIN_CLOSED, 'Quit'):
			break
		elif event == '':
			pass

	window.close()
